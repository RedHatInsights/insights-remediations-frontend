name: sentryInit

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'The commit hash (or branch/tag) to build'
        required: false
        default: ''

jobs:
  createSentryRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_hash || 'refs/heads/master' }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          ENABLE_SENTRY:  ${{ secrets.ENABLE_SENTRY }}
          SENTRY_RELEASE: ${{ github.event.inputs.commit_hash || github.sha }}
          SENTRY_AUTH_TOKEN: ${{ github.event.inputs.commit_hash && secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG:      ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT:  ${{ secrets.SENTRY_PROJECT }}
        run: npm run build --if-present

      - name: Install Sentry CLI
        if: ${{ github.event.inputs.commit_hash != '' }}
        run: npm install -g @sentry/cli
      - name: Upload sourcemaps to Sentry
        if: ${{ github.event.inputs.commit_hash != '' }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          COMMIT=${{ github.event.inputs.commit_hash || github.sha }}
          PREFIX="/apps/remediations/js"
          PROJECTS="inventory-rhel advisor-rhel vulnerability-rhel compliance-rhel"

          for PROJECT in $PROJECTS; do
            echo "Uploading Remediations sourcemaps to $PROJECTâ€¦"
            sentry-cli releases files "$COMMIT" upload-sourcemaps ./dist/js \
              --org red-hat-it \
              --project "$PROJECT" \
              --release "$COMMIT" \
              --url-prefix "$PREFIX" \
              --rewrite \
              --validate
          done
